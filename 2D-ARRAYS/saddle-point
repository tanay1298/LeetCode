// https://www.youtube.com/watch?v=6YIWq2JGzEQ&list=TLGGiHOTI3zPQVoxNjA3MjAyMw

// 1. You are given a square matrix of size 'n'. You are given n*n elements of the square matrix. 
// 2. You are required to find the saddle price of the given matrix and print the saddle price. 
// 3. The saddle price is defined as the least price in the row but the maximum price in the column of the matrix.

// Sample Input
// 4
// 11
// 12
// 13
// 14
// 21
// 22
// 23
// 24
// 31
// 32
// 33
// 34
// 41
// 42
// 43
// 44
// Sample Output
// 41

// min in row and max in column
int n = arr.length;
int m = arr[0].length;

for(int i=0;i<n;i++)
{
    int mvj = 0; // min value j

    // find min in row
    for(int j=1;j<m;j++)
    {
        if(arr[i][j] < arr[i][mvj])
            mvj = j;
    }

    boolean flag = true; // assuming it's a saddle point
    // now assuming our saddle point is arr[i][svj]

    for(int k=0;k<n;k++)
    {
        if(arr[k][mvj] > arr[i][mvj])
        {
            flag = false;
            break;
        }
    }

    if(flag==true)
    {
        System.out.println("saddle point is : " + arr[i][svj]);
        return;
    }
}

System.out.println("invalid input");